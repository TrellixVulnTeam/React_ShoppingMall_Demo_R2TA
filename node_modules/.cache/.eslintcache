[{"/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/index.js":"1","/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/App.js":"2","/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/reportWebVitals.js":"3","/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/Detail.js":"4","/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/data.js":"5"},{"size":594,"mtime":1636026276248,"results":"6","hashOfConfig":"7"},{"size":5644,"mtime":1636644840722,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1635927938247,"results":"9","hashOfConfig":"7"},{"size":4497,"mtime":1636639193853,"results":"10","hashOfConfig":"7"},{"size":340,"mtime":1635948864225,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"xu1lf5",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/index.js",[],["24","25"],"/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/App.js",["26","27"],"/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/reportWebVitals.js",[],"/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/Detail.js",["28","29"],"import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport \"./Detail.scss\";\n\nlet Box = styled.div`\n  padding: 20px;\n`;\n\nlet Title = styled.h4`\n  font-size: 25px;\n  color: ${(props) => props.color};\n`;\n\n// class Detail2 extends React.Component{\n//   componentDidMount(){\n//     //컴포넌트 생성될 때\n//   }\n\n//   componentWillUnmount(){\n//     // 컴포넌트 소멸할 때\n//   }\n// }\n\nfunction Detail(props) {\n  // useEffect(() => {\n  //   async function fetchResult() {\n  //     let result = await axios.get(\n  //       \"https://codingapple1.github.io/shop/data2.json\"\n  //     );\n  //     props.shoesChange([...props.shoes, ...result.data]);\n  //   }\n  //   console.log(props.shoes);\n  //   fetchResult();\n  // }, []);\n\n  console.log(props.shoes);\n\n  let [alert, alertChange] = useState(true);\n  let [inputData, inputDataChange] = useState(\"\");\n\n  // 컴포넌트가 mount 되었을때, update 될때 특정 코드 실행\n  // use Effect 는 여러개 생성 가능 대신 먼저 적힌 코드부터 실행\n  // use Effect 콜백함수 뒤에 인자로 []를 사용하여 안에 특정 state를 집어넣을 수 있다.\n  // 즉 []는 state 조건을 뜻하고 해당 []가 비어있으면 조건에 맞는값이 없으므로\n  // 해당 useEffect는 실행되지 않는다. = 해당 컴포넌트가 처음 로드될때만 실행됨\n  // [] 내부에 state 여러개 추가 가능 ex) [state1, state2...]\n  useEffect(() => {\n    let timer = setTimeout(() => {\n      alertChange(false);\n    }, 2000);\n\n    console.log(\"hello\");\n\n    // unmount 될때\n    return () => {\n      clearTimeout(timer);\n    };\n    // settimeout은 해당 초가 지나기 전에 사용자에 의해 페이지 변경이 일어나면\n    // 버그가 발생할 수 있어 실행 후 제거해주는 것이 좋다. = clearTimeout\n  }, []);\n\n  let history = useHistory();\n  let { id } = useParams();\n  // useParams 반환값은 객체 그 안에 url의 모든 파라미터 담겨있음\n  // 그래서 destructuring 을 사용해 변수에 담아줌\n\n  let selectItem = props.shoes.find((i) => {\n    return i.id == id;\n  });\n  // find 메서드는 앞에 온 배열의 하나하나를 인자로 넣어주어 뒤에 콜백함수에 적어준 조건에 맞는 첫번째 값을 반환한다.\n  // 만약 조건에 맞는 모든 값들을 얻고 싶다면 filter 함수를 사용해 배열형태로 조건에 맞는 값들을 받아올 수 있다.\n\n  console.log(selectItem);\n  console.log(id);\n\n  function stockMinus() {\n    let stock = [...props.stock];\n    let idx = selectItem.id;\n    console.log(stock);\n    stock.splice(idx, 1, stock[idx] - 1);\n    console.log(stock);\n    return stock;\n  }\n\n  return (\n    <div className=\"container\">\n      <Box>\n        <Title className=\"red\">Detail</Title>\n      </Box>\n\n      {inputData}\n      <input\n        onChange={(e) => {\n          inputDataChange(e.target.value);\n        }}\n      />\n\n      {\n        // 보통의 UI가 이렇게 true. false를 반환하는 state를 만들고\n        // 삼항조건식으로 생성 및 제거하는 방법으로 구축한다.\n        alert === true ? (\n          <div className=\"my-alert-2\">\n            <p>재고가 얼마 남지 않았습니다</p>\n          </div>\n        ) : null\n      }\n\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <img\n            src={\n              \"https://codingapple1.github.io/shop/shoes\" +\n              (selectItem.id + 1) +\n              \".jpg\"\n            }\n            width=\"100%\"\n            alt=\"이미지\"\n          />\n        </div>\n        <div className=\"col-md-6 mt-4\">\n          <h4 className=\"pt-5\">{selectItem.title}</h4>\n          <p>{selectItem.content}</p>\n          <p>{selectItem.price}원</p>\n          <Info stock={props.stock} selectItem={selectItem}></Info>\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              props.stockChange(stockMinus);\n            }}\n          >\n            주문하기\n          </button>\n          &nbsp;\n          <button\n            className=\"btn btn-danger\"\n            onClick={() => {\n              history.push(\"/\");\n            }}\n          >\n            뒤로가기\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction Info(props) {\n  return <p>재고 : {props.stock[props.selectItem.id]}</p>;\n}\n\nexport default Detail;\n","/Users/kimjunghwan/coding apple/REACT CLASS/shop/src/data.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":22,"column":5,"nodeType":"36","messageId":"37","endLine":22,"endColumn":13},{"ruleId":"34","severity":1,"message":"38","line":27,"column":7,"nodeType":"36","messageId":"37","endLine":27,"endColumn":14},{"ruleId":"34","severity":1,"message":"39","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":13},{"ruleId":"40","severity":1,"message":"41","line":70,"column":17,"nodeType":"42","messageId":"43","endLine":70,"endColumn":19},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'Pointer2' is assigned a value but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]