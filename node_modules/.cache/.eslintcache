[{"/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/index.js":"1","/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/reportWebVitals.js":"2","/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/App.js":"3","/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/Detail.js":"4","/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/data.js":"5"},{"size":594,"mtime":1636026276248,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1635927938247,"results":"8","hashOfConfig":"7"},{"size":6377,"mtime":1636893189692,"results":"9","hashOfConfig":"7"},{"size":6284,"mtime":1636895072970,"results":"10","hashOfConfig":"7"},{"size":340,"mtime":1635948864225,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"zh4tdg",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/index.js",[],["24","25"],"/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/reportWebVitals.js",[],"/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/App.js",["26"],"import React, { useContext, useState } from \"react\";\nimport { Navbar, Container, Nav, NavDropdown, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport shoeList from \"./data\";\nimport styled from \"styled-components\";\n\nimport {\n  BrowserRouter,\n  Link,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport Detail from \"./Detail.js\";\n\nimport axios from \"axios\";\n\nlet Pointer = styled.img`\n  cursor: pointer;\n`;\n\nexport let stockContext = React.createContext();\n// 범위 생성(다른 파일의 컴포넌트에서 사용할 시 export 필요)\n\nfunction App() {\n  let [shoes, shoesChange] = useState(shoeList);\n  let [stock, stockChange] = useState([10, 11, 12, 15, 14, 20]);\n\n  // function dataAdd(data) {\n  //   let newData = [...shoes];\n  //   let addData = [...newData, ...data];\n  //   shoesChange(addData);\n  // }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/React_ShoppingMall_Demo\">\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Container>\n            <Navbar.Brand as={Link} to=\"/\">\n              ShoeShop\n            </Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n              <Nav className=\"me-auto\">\n                {/* <Nav.Link>\n                <Link to=\"/\">Home</Link>\n              </Nav.Link> */}\n                <Nav.Link as={Link} to=\"/\">\n                  Home\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/detail/0\">\n                  Detail\n                </Nav.Link>\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                  <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.2\">\n                    Another action\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"#action/3.3\">\n                    Something\n                  </NavDropdown.Item>\n                  <NavDropdown.Divider />\n                  <NavDropdown.Item href=\"#action/3.4\">\n                    Separated link\n                  </NavDropdown.Item>\n                </NavDropdown>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        {/* Switch태그로 감싸면 중복되는 url주소 있어도 상단에 작성된 하나만 보여줌 */}\n        <Switch>\n          <Route exact path=\"/\">\n            <div className=\"background\">\n              <h1>20% Season off</h1>\n              <p>jumbotron</p>\n              <p>\n                <Button variant=\"primary\">Primary</Button>\n              </p>\n            </div>\n            <div className=\"container\">\n              {/* 범위 생성 html */}\n              <stockContext.Provider value={stock}>\n                <div className=\"row\">\n                  {shoes.map((item, index) => {\n                    return <ItemBox item={item} index={index} key={index} />;\n                  })}\n                </div>\n              </stockContext.Provider>\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => {\n                  // 로딩중 UI\n\n                  // axios post 요청 = 데이터 전송\n                  // axios.post('서버URL', {id : \"아이디\", pw : 1234});\n\n                  // axios get요청\n                  axios\n                    .get(\"https://codingapple1.github.io/shop/data2.json\")\n                    .then((result) => {\n                      // 로딩중 UI 안보이게\n                      //서버와 연결 성공했을때\n                      // result는 성공해서 받아온 모든 정보들이 담겨있는 객체\n                      shoesChange([...shoes, ...result.data]);\n                      // result.data는 결과 객체에서 데이터 프로퍼타에 해당하는 값만 가져옴\n                    })\n                    .catch(() => {\n                      //서버와 연결 실패했을때\n                      console.log(\"실패!\");\n                    });\n                  //fetch도 위와 사용법은 거의 같음 대신 axios는 JSON파일의 \"\":\"\" 내용의 문자열에서\n                  // \"\"를 제거하여 객체 타입으로 반환해주고 fetch 함수는 JSON 그대로 반환하기때문에 객체타입으로 변환하는 작업이 필요하다.\n                  // fetch(\"https://codingapple1.github.io/shop/data2.json\")\n                  //   .then((result) => {\n                  //     console.log(result.data);\n                  //   })\n                  //   .catch();\n                  // 위처럼 사용하면 undefined 출력됨, 객체타입으로 변환 필요\n                }}\n              >\n                더보기\n              </button>\n            </div>\n          </Route>\n          <Route exact path=\"/detail/:id\">\n            <stockContext.Provider value={stock}>\n              <Detail\n                shoes={shoes}\n                shoesChange={shoesChange}\n                stock={stock}\n                stockChange={stockChange}\n              />\n            </stockContext.Provider>\n          </Route>\n\n          <Route path=\"/:id\">\n            {/* :id 는 아무문자를 의미 */}\n            <div>아무거나 적었을때 이거 보여줌</div>\n          </Route>\n        </Switch>\n      </BrowserRouter>\n      {/* <Route path=\"~~~\" component={~~~}></Route> */}\n    </div>\n  );\n}\n\nfunction ItemBox(props) {\n  let history = useHistory();\n\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.index);\n      }}\n    >\n      <Pointer\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" +\n          (props.index + 1) +\n          \".jpg\"\n        }\n        alt=\"상품이미지1\"\n        width=\"100%\"\n      />\n      <h4>{props.item.title}</h4>\n      <p>\n        {props.item.content} & {props.item.price}\n      </p>\n      <Stock index={props.index}></Stock>\n    </div>\n  );\n}\n\nfunction Stock(props) {\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  // 부모의 context범위 안에 포함되어 있는 컴포넌트들은 전부 state값 공유 가능\n  // 공유 범위 사용 변수 작성 시...\n  return <p>재고 : {stock[props.index]}</p>;\n}\n\nexport default App;\n","/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/Detail.js",["27","28","29","30","31","32","33"],"/Users/kimjunghwan/coding_apple/REACT CLASS/shop/src/data.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":154,"column":7,"nodeType":"40","messageId":"41","endLine":154,"endColumn":12},{"ruleId":"38","severity":1,"message":"42","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},{"ruleId":"38","severity":1,"message":"43","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":16},{"ruleId":"38","severity":1,"message":"44","line":3,"column":18,"nodeType":"40","messageId":"41","endLine":3,"endColumn":27},{"ruleId":"38","severity":1,"message":"45","line":3,"column":34,"nodeType":"40","messageId":"41","endLine":3,"endColumn":45},{"ruleId":"38","severity":1,"message":"46","line":3,"column":47,"nodeType":"40","messageId":"41","endLine":3,"endColumn":53},{"ruleId":"38","severity":1,"message":"39","line":41,"column":7,"nodeType":"40","messageId":"41","endLine":41,"endColumn":12},{"ruleId":"47","severity":1,"message":"48","line":76,"column":17,"nodeType":"49","messageId":"50","endLine":76,"endColumn":19},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'stock' is assigned a value but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'NavDropdown' is defined but never used.","'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]