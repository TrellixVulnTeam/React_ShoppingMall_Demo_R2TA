{"version":3,"sources":["reportWebVitals.js","index.js","data.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","basicState","id","name","quan","localstorage","store","createStore","combineReducers","reducer","state","action","type","copy","findName","find","i","payload","push","console","log","reducer2","reducer3","reducer4","ReactDOM","render","StrictMode","basename","App","document","getElementById","shoeList","title","content","price","Detail","lazy","Cart","Storage","Pointer","styled","img","TopTitle","div","stockContext","React","createContext","ItemBox","props","history","useHistory","useContext","className","onClick","item","src","index","alt","width","Stock","stock","useState","shoes","shoesChange","stockChange","recent","recentChange","url","urlChange","useSelector","useEffect","storage","JSON","parse","localStorage","getItem","IntLocal","map","parseInt","length","newRecent","filter","includes","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","Collapse","Nav","NavDropdown","Item","href","Divider","exact","path","Button","variant","Provider","value","axios","get","result","data","catch","fallback"],"mappings":"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","file":"static/js/main.e573ac20.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { combineReducers, createStore } from \"redux\";\n\nlet basicState = [\n  { id: 0, name: \"멋진신발\", quan: 2 },\n  { id: 1, name: \"멋진신발2\", quan: 1 },\n  { id: 2, name: \"멋진신발3\", quan: 3 },\n];\n\nfunction reducer(state = basicState, action) {\n  if (action.type === \"addItem\") {\n    let copy = [...state];\n    let findName = copy.find((i) => {\n      return i.name == action.payload.name;\n    });\n    if (findName) {\n      findName.quan++;\n      return copy;\n    } else {\n      copy.push(action.payload);\n      return copy;\n    }\n  } else if (action.type === \"addQuan\") {\n    let copy = [...state];\n    console.log(action.payload.id);\n    copy[action.payload.id].quan++;\n\n    return copy;\n  } else if (action.type === \"delQuan\") {\n    let copy = [...state];\n    if (copy[action.payload.id].quan > 0) copy[action.payload.id].quan--;\n\n    return copy;\n  } else {\n    return state;\n  }\n}\n\nlet alertBasic = true;\n\nfunction reducer2(state = alertBasic, action) {\n  if (action.type === \"alertClose\") {\n    state = false;\n    return state;\n  }\n  return state;\n}\n\nlet localstorage = [];\n\nfunction reducer3(state = localstorage, action) {\n  return state;\n}\n\nlet move = 0;\n\nfunction reducer4(state = move, action) {\n  return state;\n}\n\nlet store = createStore(\n  combineReducers({ reducer, reducer2, reducer3, reducer4 })\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/React_ShoppingMall_Demo\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","let shoeList = [\n  {\n    id: 0,\n    title: \"White and Black\",\n    content: \"Born in France\",\n    price: 120000,\n  },\n\n  {\n    id: 1,\n    title: \"Red Knit\",\n    content: \"Born in Seoul\",\n    price: 110000,\n  },\n\n  {\n    id: 2,\n    title: \"Grey Yordan\",\n    content: \"Born in the States\",\n    price: 130000,\n  },\n];\n\nexport default shoeList;\n","import React, { useContext, useState, lazy, Suspense, useEffect } from \"react\";\nimport { Navbar, Container, Nav, NavDropdown, Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport shoeList from \"./data\";\nimport styled from \"styled-components\";\n\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\n\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n// import Detail from \"./Detail.js\";\nlet Detail = lazy(() => {\n  return import(\"./Detail.js\");\n});\n\n// import Cart from \"./Cart.js\";\nlet Cart = lazy(() => {\n  return import(\"./Cart.js\");\n});\n\nlet Storage = lazy(() => {\n  return import(\"./Storage.js\");\n});\n\nlet Pointer = styled.img`\n  cursor: pointer;\n`;\n\nlet TopTitle = styled.div`\n  width: 250px;\n  margin: 0 auto;\n  color: red;\n  padding: 30px 0 0;\n  border-bottom: 3px solid red;\n  margin-bottom: 20px;\n`;\n\nexport let stockContext = React.createContext();\n// 범위 생성(다른 파일의 컴포넌트에서 사용할 시 export 필요)\n\nfunction App() {\n  let [shoes, shoesChange] = useState(shoeList);\n  let [stock, stockChange] = useState([10, 11, 12, 15, 14, 20]);\n  let [recent, recentChange] = useState([]);\n  let [url, urlChange] = useState(0);\n\n  // function dataAdd(data) {\n  //   let newData = [...shoes];\n  //   let addData = [...newData, ...data];\n  //   shoesChange(addData);\n  // }\n\n  let state = useSelector((state) => {\n    return state;\n  });\n\n  // localstorage 있으면 받아옴 없으면 패스\n  useEffect(() => {\n    let copy = [...state.reducer3];\n    let storage = JSON.parse(localStorage.getItem(\"local\"));\n    if (storage) {\n      copy = [...storage];\n    }\n    state.reducer3 = copy;\n  }, [url]);\n\n  useEffect(() => {\n    let copy = [...recent];\n    let local = [...state.reducer3];\n    // console.log(local);\n    let IntLocal = local.map((i) => {\n      return parseInt(i);\n    });\n    // console.log(IntLocal);\n    if (IntLocal.length > 0) {\n    }\n    let newRecent = shoes.filter((i) => {\n      return IntLocal.includes(i.id);\n    });\n\n    copy = newRecent;\n    recentChange(copy);\n  }, [url]);\n\n  console.log(recent);\n\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand\n            as={Link}\n            to=\"/\"\n            onClick={() => {\n              urlChange(url + 1);\n            }}\n          >\n            ShoeShop\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"me-auto\">\n              {/* <Nav.Link>\n                <Link to=\"/\">Home</Link>\n              </Nav.Link> */}\n              <Nav.Link\n                as={Link}\n                to=\"/\"\n                onClick={() => {\n                  urlChange(url + 1);\n                }}\n              >\n                Home\n              </Nav.Link>\n              <Nav.Link as={Link} to=\"/detail/0\">\n                Detail\n              </Nav.Link>\n              <Nav.Link\n                as={Link}\n                to=\"/storage\"\n                onClick={() => {\n                  urlChange(url + 1);\n                }}\n              >\n                Recently viewed\n              </Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">\n                  Another action\n                </NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">\n                  Something\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">\n                  Separated link\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      {/* Switch태그로 감싸면 중복되는 url주소 있어도 상단에 작성된 하나만 보여줌 */}\n      <Switch>\n        <Route exact path=\"/\">\n          <div className=\"background\">\n            <h1>20% Season off</h1>\n            <p>jumbotron</p>\n            <p>\n              <Button variant=\"primary\">Primary</Button>\n            </p>\n          </div>\n          <div className=\"container\">\n            {/* 범위 생성 html */}\n            <stockContext.Provider value={stock}>\n              <div className=\"row\">\n                {shoes.map((item, index) => {\n                  return <ItemBox item={item} index={index} key={index} />;\n                })}\n              </div>\n            </stockContext.Provider>\n            <button\n              className=\"btn btn-primary\"\n              onClick={() => {\n                // 로딩중 UI\n\n                // axios post 요청 = 데이터 전송\n                // axios.post('서버URL', {id : \"아이디\", pw : 1234});\n\n                // axios get요청\n                axios\n                  .get(\"https://codingapple1.github.io/shop/data2.json\")\n                  .then((result) => {\n                    // 로딩중 UI 안보이게\n                    //서버와 연결 성공했을때\n                    // result는 성공해서 받아온 모든 정보들이 담겨있는 객체\n                    shoesChange([...shoes, ...result.data]);\n                    // result.data는 결과 객체에서 데이터 프로퍼타에 해당하는 값만 가져옴\n                  })\n                  .catch(() => {\n                    //서버와 연결 실패했을때\n                    console.log(\"실패!\");\n                  });\n                //fetch도 위와 사용법은 거의 같음 대신 axios는 JSON파일의 \"\":\"\" 내용의 문자열에서\n                // \"\"를 제거하여 객체 타입으로 반환해주고 fetch 함수는 JSON 그대로 반환하기때문에 객체타입으로 변환하는 작업이 필요하다.\n                // fetch(\"https://codingapple1.github.io/shop/data2.json\")\n                //   .then((result) => {\n                //     console.log(result.data);\n                //   })\n                //   .catch();\n                // 위처럼 사용하면 undefined 출력됨, 객체타입으로 변환 필요\n              }}\n            >\n              더보기\n            </button>\n          </div>\n        </Route>\n        <Route exact path=\"/detail/:id\">\n          <stockContext.Provider value={stock}>\n            <Suspense fallback={<div>로딩중입니다...</div>}>\n              <Detail\n                shoes={shoes}\n                shoesChange={shoesChange}\n                stock={stock}\n                stockChange={stockChange}\n                url={url}\n                urlChange={urlChange}\n              />\n            </Suspense>\n          </stockContext.Provider>\n        </Route>\n\n        <Route path=\"/cart\">\n          <Suspense fallback={<div>로딩중입니다...</div>}>\n            <Cart />\n          </Suspense>\n        </Route>\n\n        <Route path=\"/storage\">\n          <Suspense fallback={<div>로딩중입니다...</div>}>\n            <div className=\"container\">\n              <TopTitle>\n                <h1>최근 본 상품</h1>\n              </TopTitle>\n              <stockContext.Provider value={stock}>\n                <div className=\"row\">\n                  {recent.map((item, index) => {\n                    return (\n                      <Storage\n                        item={item}\n                        index={index}\n                        key={index}\n                        stock={stock}\n                        stockChange={stockChange}\n                      />\n                    );\n                  })}\n                </div>\n              </stockContext.Provider>\n            </div>\n          </Suspense>\n        </Route>\n\n        <Route path=\"/:id\">\n          {/* :id 는 아무문자를 의미 */}\n          <div>아무거나 적었을때 이거 보여줌</div>\n        </Route>\n      </Switch>\n      {/* <Route path=\"~~~\" component={~~~}></Route> */}\n    </div>\n  );\n}\n\nfunction ItemBox(props) {\n  let history = useHistory();\n\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  return (\n    <div\n      className=\"col-md-4\"\n      onClick={() => {\n        history.push(\"/detail/\" + props.item.id);\n      }}\n    >\n      <Pointer\n        src={\n          \"https://codingapple1.github.io/shop/shoes\" +\n          (props.index + 1) +\n          \".jpg\"\n        }\n        alt=\"상품이미지1\"\n        width=\"100%\"\n      />\n      <h4>{props.item.title}</h4>\n      <p>\n        {props.item.content} & {props.item.price}\n      </p>\n      <Stock index={props.index}></Stock>\n    </div>\n  );\n}\n\nfunction Stock(props) {\n  // state 공유 범위 사용 변수\n  let stock = useContext(stockContext);\n\n  // 부모의 context범위 안에 포함되어 있는 컴포넌트들은 전부 state값 공유 가능\n  // 공유 범위 사용 변수 작성 시...\n  return <p>재고 : {stock[props.index]}</p>;\n}\n\nexport default App;\n"],"sourceRoot":""}